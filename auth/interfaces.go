package auth

import (
	"context"
	"github.com/golang-jwt/jwt/v5"
)

// ----------------------------------------------------------------------
// JWT Claims (Полезная нагрузка токена)
// ----------------------------------------------------------------------

// JWTClaims - Структура, содержащая данные, которые мы вкладываем в JWT.
type JWTClaims struct {
	UserID int64  `json:"user_id"`
	Email  string `json:"email"`
	jwt.RegisteredClaims
}

// ----------------------------------------------------------------------
// Интерфейсы Моделей
// Сервис-потребитель должен реализовать эти интерфейсы для своих структур.
// ----------------------------------------------------------------------

// Userer - минимальный интерфейс для работы с Пользователем.
type Userer interface {
	GetID() int64
	GetEmail() string
	GetPasswordHash() string // Должен возвращать хэш пароля
}

// ----------------------------------------------------------------------
// Интерфейс Хранилища (Storage)
// ----------------------------------------------------------------------

// Storage определяет методы для работы с Пользователями в БД.
// Так как мы используем JWT, методы сессий здесь не нужны.
type Storage interface {
	// User
	GetUserByEmail(ctx context.Context, email string) (Userer, error)
	GetUserByID(ctx context.Context, id int64) (Userer, error)
	// При необходимости разработчик расширяет свою реализацию Storage
	// дополнительными методами (CreateUser, UpdateUser и т.д.)
}
